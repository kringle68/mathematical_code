#!/usr/bin/perl
use strict;
use warnings;
use Carp;
use Data::Dumper;
use Getopt::Long;


#PROBLEM 2
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

my ( $ceiling, $help );

GetOptions(
    'c|ceiling=i'               => \$ceiling,
    'h|help'                    => \$help,
);

( $ceiling && !$help ) or die <<USAGE;
Usage: $0   
  -c|--ceiling		       <number BELOW which we calculate sum of even members of Fibonacci series>
  -h|--help                    <this message>
USAGE

my @series = get_fibonacci($ceiling);
my $sum = 0;
foreach ( @series ) {
	if ( $_ % 2 == 0 ) {
		$sum += $_;
	}
}
print "Sum below $ceiling = $sum\n";

sub get_fibonacci
{
	my ($max) = @_;
	my @fibseries = (1, 2);
	while ( ($fibseries[-1] + $fibseries[-2]) < $max ) {
		push @fibseries, $fibseries[-1] + $fibseries[-2];
	}
	print Dumper \@fibseries, "\n";
	return @fibseries;
}
